{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MASHATE\\\\Desktop\\\\JS\\\\React\\\\frontend\\\\src\\\\pages\\\\Login.js\";\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.fetchItems();\n    };\n\n    this.fetchItems = async () => {\n      const query = new URLSearchParams(window.location.search);\n      const login = query.get('login');\n      const password = query.get('password');\n      this.setState({\n        queryParams: {\n          \"login\": login,\n          \"password\": password\n        }\n      });\n      const res = await axios.get('http://127.0.0.1:8080/EJB-Client/APIv1.0/users/' + this.state.queryParams.login);\n      const item = res.data;\n      console.log(item);\n      let l = false;\n\n      if (item != null && item.login === this.state.queryParams.login && this.state.queryParams.password === item.password && item.role == \"admin\") {\n        localStorage.setItem(\"userID\", \"2022@\" + item.login + \"@\" + item.password);\n        localStorage.setItem(\"loggingerror\", \"no\");\n        l = true;\n      } else {\n        localStorage.setItem(\"loggingerror\", \"yes\");\n        l = false;\n      }\n\n      this.setState({\n        user: item,\n        is_logged: l\n      });\n    };\n\n    this.state = {\n      user: {},\n      queryParams: {},\n      is_logged: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex my-40 flex-col rid place-items-center h-screen\",\n      children: [this.state.is_logged ? /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"align-middle text-xl font-semibold font-serif \",\n        children: \"Logged In successfully , redirected to the app .... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://www.svgrepo.com/show/314685/spinner-solid.svg\",\n        alt: \" \",\n        className: \"animate-spin mt-8 w-12 align-middle \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MASHATE/Desktop/JS/React/frontend/src/pages/Login.js"],"names":["React","useSearchParams","Navigate","axios","Login","Component","constructor","componentDidMount","fetchItems","query","URLSearchParams","window","location","search","login","get","password","setState","queryParams","res","state","item","data","console","log","l","role","localStorage","setItem","user","is_logged","render"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAAUC,QAAV,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAE/CC,EAAAA,WAAW,GAAE;AACX;;AADW,SAQXC,iBARW,GAQS,MAAM;AACtB,WAAKC,UAAL;AACH,KAVU;;AAAA,SAWbA,UAXa,GAWA,YAAY;AACrB,YAAMC,KAAK,GAAI,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAf;AAEA,YAAMC,KAAK,GAAIL,KAAK,CAACM,GAAN,CAAU,OAAV,CAAf;AACA,YAAMC,QAAQ,GAAIP,KAAK,CAACM,GAAN,CAAU,UAAV,CAAlB;AAEA,WAAKE,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE;AACX,mBAASJ,KADE;AAEX,sBAAYE;AAFD;AADD,OAAd;AAQA,YAAMG,GAAG,GAAG,MAAMhB,KAAK,CAACY,GAAN,CAAU,oDAAkD,KAAKK,KAAL,CAAWF,WAAX,CAAuBJ,KAAnF,CAAlB;AACA,YAAMO,IAAI,GAAGF,GAAG,CAACG,IAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,UAAII,CAAC,GAAC,KAAN;;AACA,UAAKJ,IAAI,IAAE,IAAN,IAAcA,IAAI,CAACP,KAAL,KAAa,KAAKM,KAAL,CAAWF,WAAX,CAAuBJ,KAAlD,IAA4D,KAAKM,KAAL,CAAWF,WAAX,CAAuBF,QAAvB,KAAoCK,IAAI,CAACL,QAArG,IAAiHK,IAAI,CAACK,IAAL,IAAW,OAAjI,EAA0I;AACtIC,QAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+B,UAAQP,IAAI,CAACP,KAAb,GAAmB,GAAnB,GAAuBO,IAAI,CAACL,QAA3D;AACAW,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,IAArC;AACCH,QAAAA,CAAC,GAAC,IAAF;AACJ,OAJD,MAKK;AACDE,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,KAArC;AACCH,QAAAA,CAAC,GAAC,KAAF;AACJ;;AAED,WAAKR,QAAL,CAAc;AACVY,QAAAA,IAAI,EAAER,IADI;AAEVS,QAAAA,SAAS,EAAEL;AAFD,OAAd;AAIH,KA5CY;;AAEX,SAAKL,KAAL,GAAW;AACTS,MAAAA,IAAI,EAAC,EADI;AAETX,MAAAA,WAAW,EAAC,EAFH;AAGTY,MAAAA,SAAS,EAAC;AAHD,KAAX;AAKD;;AA0CDC,EAAAA,MAAM,GAAE;AAEJ,wBAEI;AAAK,MAAA,SAAS,EAAC,qDAAf;AAAA,iBACK,KAAKX,KAAL,CAAWU,SAAX,gBAAuB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAvB,gBAA+C,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADpD,eAEE;AAAG,QAAA,SAAS,EAAC,gDAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,GAAG,EAAC,uDAAT;AAAiE,QAAA,GAAG,EAAC,GAArE;AAA0E,QAAA,SAAS,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAQH;;AA7D8C","sourcesContent":["import React  from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport {  Navigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    constructor(){\r\n      super()\r\n      this.state={\r\n        user:{},\r\n        queryParams:{},\r\n        is_logged:false\r\n      }\r\n    }\r\n      componentDidMount = () => {\r\n          this.fetchItems()\r\n      }\r\n    fetchItems = async () => {\r\n        const query =  new URLSearchParams(window.location.search);\r\n        \r\n        const login =  query.get('login');\r\n        const password =  query.get('password');\r\n\r\n        this.setState({\r\n          queryParams: {\r\n            \"login\": login,\r\n            \"password\": password,\r\n            }\r\n        })\r\n        \r\n    \r\n        const res = await axios.get('http://127.0.0.1:8080/EJB-Client/APIv1.0/users/'+this.state.queryParams.login);\r\n        const item = res.data;\r\n        console.log(item)\r\n\r\n        let l=false\r\n        if ( item!=null && item.login===this.state.queryParams.login &&  this.state.queryParams.password === item.password && item.role==\"admin\" ){\r\n            localStorage.setItem(\"userID\", \"2022@\"+item.login+\"@\"+item.password)\r\n            localStorage.setItem(\"loggingerror\", \"no\")\r\n             l=true\r\n        }\r\n        else {\r\n            localStorage.setItem(\"loggingerror\", \"yes\")\r\n             l=false\r\n        }\r\n\r\n        this.setState({\r\n            user: item,\r\n            is_logged: l\r\n        });\r\n    }\r\n\r\n\r\n\r\n    \r\n    render(){\r\n\r\n        return (\r\n        \r\n            <div className='flex my-40 flex-col rid place-items-center h-screen'>\r\n                {this.state.is_logged ? <Navigate to=\"/\"   /> : <Navigate to=\"/signin\"  />}\r\n              <p className='align-middle text-xl font-semibold font-serif '>Logged In successfully , redirected to the app .... </p> \r\n              <img src='https://www.svgrepo.com/show/314685/spinner-solid.svg' alt=' '  className='animate-spin mt-8 w-12 align-middle '/>      \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}