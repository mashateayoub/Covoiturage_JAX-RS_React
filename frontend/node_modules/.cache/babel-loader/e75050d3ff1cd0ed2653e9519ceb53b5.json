{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MASHATE\\\\Desktop\\\\JS\\\\React\\\\frontend\\\\src\\\\pages\\\\Login.js\";\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.retrieveQueryParams();\n      this.fetchItems();\n    };\n\n    this.retrieveQueryParams = async () => {\n      var data = {\n        \"login\": new URLSearchParams(window.location.search).get(\"login\"),\n        \"password\": new URLSearchParams(window.location.search).get(\"password\")\n      };\n      this.setState({\n        queryParams: data\n      });\n    };\n\n    this.fetchItems = async () => {\n      const res = await axios.get('http://127.0.0.1:8080/EJB-Client/APIv1.0/users/' + this.state.queryParams.login);\n      const item = res.data;\n      let l = false;\n\n      if (this.state.user != null && this.state.user.login === this.state.data.login && this.state.data.password === this.state.user.password && this.state.user.role == \"admin\") {\n        localStorage.setItem(\"userID\", \"2022@\" + this.state.user.login + \"@\" + this.state.user.password);\n        localStorage.setItem(\"loggingerror\", \"no\");\n        l = true;\n      } else {\n        localStorage.setItem(\"loggingerror\", \"yes\");\n        l = false;\n      }\n\n      this.setState({\n        user: item,\n        is_logged: l\n      });\n    };\n\n    this.state = {\n      user: {},\n      queryParams: {\n        \"login\": \" \",\n        \"password\": \" \"\n      },\n      is_logged: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex my-40 flex-col rid place-items-center h-screen\",\n      children: [this.state.is_logged ? /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"align-middle text-xl font-semibold font-serif \",\n        children: \"Logged In successfully , redirected to the app .... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://www.svgrepo.com/show/314685/spinner-solid.svg\",\n        alt: \" \",\n        className: \"animate-spin mt-8 w-12 align-middle \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MASHATE/Desktop/JS/React/frontend/src/pages/Login.js"],"names":["React","useSearchParams","Navigate","axios","Login","Component","constructor","componentDidMount","retrieveQueryParams","fetchItems","data","URLSearchParams","window","location","search","get","setState","queryParams","res","state","login","item","l","user","password","role","localStorage","setItem","is_logged","render"],"mappings":"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","sourcesContent":["import React  from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\nimport {  Navigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    constructor(){\r\n      super()\r\n      this.state={\r\n        user:{},\r\n        queryParams:{\r\n          \"login\":\" \",\r\n          \"password\": \" \",\r\n        },\r\n        is_logged:false\r\n      }\r\n    }\r\n      componentDidMount = () => {\r\n          this.retrieveQueryParams()\r\n          this.fetchItems()\r\n      }\r\n  \r\n      retrieveQueryParams= async () =>{\r\n\r\n        var data={\r\n            \"login\": new URLSearchParams(window.location.search).get(\"login\"),\r\n            \"password\": new URLSearchParams(window.location.search).get(\"password\"),\r\n            }\r\n\r\n        this.setState({\r\n          queryParams: data\r\n        })\r\n      }\r\n\r\n    fetchItems = async () => {\r\n        \r\n    \r\n        const res = await axios.get('http://127.0.0.1:8080/EJB-Client/APIv1.0/users/'+this.state.queryParams.login);\r\n        const item = res.data;\r\n\r\n        let l=false\r\n        if ( this.state.user!=null && this.state.user.login===this.state.data.login &&  this.state.data.password === this.state.user.password && this.state.user.role==\"admin\" ){\r\n            localStorage.setItem(\"userID\", \"2022@\"+this.state.user.login+\"@\"+this.state.user.password)\r\n            localStorage.setItem(\"loggingerror\", \"no\")\r\n             l=true\r\n        }\r\n        else {\r\n            localStorage.setItem(\"loggingerror\", \"yes\")\r\n             l=false\r\n        }\r\n\r\n        this.setState({\r\n            user: item,\r\n            is_logged: l\r\n        });\r\n    }\r\n\r\n\r\n\r\n    \r\n    render(){\r\n\r\n        return (\r\n        \r\n            <div className='flex my-40 flex-col rid place-items-center h-screen'>\r\n                {this.state.is_logged ? <Navigate to=\"/\"   /> : <Navigate to=\"/signin\"  />}\r\n              <p className='align-middle text-xl font-semibold font-serif '>Logged In successfully , redirected to the app .... </p> \r\n              <img src='https://www.svgrepo.com/show/314685/spinner-solid.svg' alt=' '  className='animate-spin mt-8 w-12 align-middle '/>      \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}