{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MASHATE\\\\Desktop\\\\JS\\\\React\\\\frontend\\\\src\\\\Partials\\\\CardList.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport Card from '../utils/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardList extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.setState({\n        loading: true\n      });\n      this.fetchItems();\n    };\n\n    this.fetchItems = async () => {\n      const res = await axios.get('https://fortnite-api.com/v2/cosmetics/br/');\n      const items = res.data.data.slice(200, 300); // this will re render the view with new data\n\n      this.setState({\n        data: items,\n        loading: false\n      });\n    };\n\n    this.sortString = string => {\n      return (a, b) => {\n        let fa = a.rarity.displayValue.toLowerCase(),\n            fb = b.rarity.displayValue.toLowerCase();\n\n        if (fa < fb) {\n          return -1;\n        }\n\n        if (fa > fb) {\n          return 1;\n        }\n\n        return 0;\n      };\n    };\n\n    this.sortByRarity = async () => {\n      this.setState({\n        loading: true\n      });\n      this.setState(_ref => {\n        let {\n          data\n        } = _ref;\n        return {\n          data: data.sort((a, b) => {\n            let fa = a.rarity.displayValue.toLowerCase(),\n                fb = b.rarity.displayValue.toLowerCase();\n\n            if (fa < fb) {\n              return -1;\n            }\n\n            if (fa > fb) {\n              return 1;\n            }\n\n            return 0;\n          }),\n          loading: false\n        };\n      });\n    };\n\n    this.sortByName = async () => {\n      this.setState({\n        loading: true\n      });\n      this.setState(_ref2 => {\n        let {\n          data\n        } = _ref2;\n        return {\n          data: data.sort((a, b) => {\n            let fa = a.name.toLowerCase(),\n                fb = b.name.toLowerCase();\n\n            if (fa < fb) {\n              return -1;\n            }\n\n            if (fa > fb) {\n              return 1;\n            }\n\n            return 0;\n          }),\n          loading: false\n        };\n      });\n    };\n\n    this.state = {\n      data: [],\n      loading: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-dark p-4 border bg-white shadow flex \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-row justify-content-between right-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-auto right-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.sortByRarity,\n            className: \"text-base bg-cyan-500 font-semibold text-white rounded-md py-2 px-4 \",\n            children: \"Sort by Rarity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.sortByName,\n            className: \"text-base bg-cyan-500 font-semibold text-white rounded-md py-2 px-4\",\n            children: \"Sort by Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CardList;","map":{"version":3,"sources":["C:/Users/MASHATE/Desktop/JS/React/frontend/src/Partials/CardList.js"],"names":["React","Component","axios","Card","CardList","constructor","componentDidMount","setState","loading","fetchItems","res","get","items","data","slice","sortString","string","a","b","fa","rarity","displayValue","toLowerCase","fb","sortByRarity","sort","sortByName","name","state","render"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport Card from '../utils/Card';\r\n\r\n\r\n\r\n\r\n\r\nclass CardList extends Component {\r\n\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      data:[],\r\n      loading:false\r\n    }\r\n  }\r\n    componentDidMount = () => {\r\n        this.setState({loading: true})\r\n        this.fetchItems()\r\n    }\r\n\r\n    fetchItems = async () => {\r\n        const res = await axios.get('https://fortnite-api.com/v2/cosmetics/br/');\r\n        const items = res.data.data.slice(200,300);\r\n\r\n        // this will re render the view with new data\r\n        this.setState({\r\n            data: items,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    sortString = (string)=>{\r\n      \r\n        return(\r\n          (a, b) => {\r\n            let fa = a.rarity.displayValue.toLowerCase(),\r\n                fb = b.rarity.displayValue.toLowerCase();\r\n        \r\n            if (fa < fb) {\r\n                return -1;\r\n            }\r\n            if (fa > fb) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }\r\n        )\r\n    }\r\n\r\n    sortByRarity = async () => {\r\n      this.setState({loading: true})\r\n      this.setState(\r\n        ({ data }) => (\r\n          {\r\n            data: data.sort((a, b) => {\r\n              let fa = a.rarity.displayValue.toLowerCase(),\r\n                  fb = b.rarity.displayValue.toLowerCase();\r\n          \r\n              if (fa < fb) {\r\n                  return -1;\r\n              }\r\n              if (fa > fb) {\r\n                  return 1;\r\n              }\r\n              return 0;\r\n          }),\r\n            loading: false\r\n        }));\r\n    }\r\n\r\n    sortByName = async () => {\r\n      this.setState({loading: true})\r\n      this.setState(\r\n        ({ data }) => (\r\n          {\r\n            data: data.sort((a, b) => {\r\n              let fa = a.name.toLowerCase(),\r\n                  fb = b.name.toLowerCase();\r\n          \r\n              if (fa < fb) {\r\n                  return -1;\r\n              }\r\n              if (fa > fb) {\r\n                  return 1;\r\n              }\r\n              return 0;\r\n          }),\r\n            loading: false\r\n        }));\r\n    }\r\n\r\n\r\n  render(){\r\n    \r\n    return(\r\n        <div className=\"text-dark p-4 border bg-white shadow flex \" >\r\n            <div className='d-flex flex-row justify-content-between right-0'>\r\n              <div className='my-auto right-0'>\r\n              <button onClick={this.sortByRarity} className=\"text-base bg-cyan-500 font-semibold text-white rounded-md py-2 px-4 \" >Sort by Rarity</button>{' '}\r\n              <button onClick={this.sortByName}  className=\"text-base bg-cyan-500 font-semibold text-white rounded-md py-2 px-4\" >Sort by Name</button>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* <Row className='flex justify-content-center p-4'> \r\n            { this.state.loading ? <Spinner type=\"border\" role=\"status\" ></Spinner> : this.state.data.map((item) => (<Card key={item.id} item={item}/>))}\r\n            </Row> */}\r\n            \r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default CardList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}